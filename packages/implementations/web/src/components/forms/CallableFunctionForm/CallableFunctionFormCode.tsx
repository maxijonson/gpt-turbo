import { Box, Group, Title, Text, Collapse, Stack, Alert } from "@mantine/core";
import { FaQuestion } from "react-icons/fa";
import CodeEditor from "./CodeEditor";
import TippedActionIcon from "../../common/TippedActionIcon";
import { useDisclosure } from "@mantine/hooks";
import useCallableFunctionForm from "../../../contexts/hooks/useCallableFunctionForm";
import { BsFillExclamationTriangleFill } from "react-icons/bs";

const CallableFunctionFormCode = () => {
    const form = useCallableFunctionForm();
    const [showHelp, { toggle: toggleHelp }] = useDisclosure();

    return (
        <Box>
            <Group spacing="xs">
                <Title order={3}>Code</Title>
                <TippedActionIcon
                    tip="What is this?"
                    onClick={toggleHelp}
                    variant={showHelp ? "filled" : "transparent"}
                    size="xs"
                >
                    <FaQuestion size={12} />
                </TippedActionIcon>
            </Group>
            <Collapse in={showHelp} mb="md">
                <Stack>
                    <Text>
                        Write an optional JavaScript function body that will get
                        executed with the parameters generated by the assistant.
                        Your function must return a value (of any type, even a
                        Promise!). If you omit it or if it returns undefined,
                        you'll still be able to see the assistant's function
                        call, but won't generate a function message follow-up.
                    </Text>
                    <Text>
                        Note that the web app does not validate your code or the
                        parameters generated by the assistant (including their
                        existence). In practice, the assistant never generates
                        an unknown parameter, but OpenAI does not guarantee that
                        this will always be the case.
                    </Text>
                    <Alert
                        color="orange"
                        title="Pasting code from the internet"
                        icon={<BsFillExclamationTriangleFill />}
                    >
                        Be careful pasting code from the internet in here!
                        Functions are executed in the browser context, which
                        means they can access the fetch API, the DOM and your
                        browser's saved data for this website (conversations,
                        settings, API keys, etc.). If you don't know what each
                        statement of the code you're pasting does, don't paste
                        it here.
                    </Alert>
                </Stack>
            </Collapse>
            <CodeEditor
                value={form.values.code}
                onChange={(value) => form.setFieldValue("code", value)}
                name={form.values.name}
                parameters={form.values.parameters}
            />
        </Box>
    );
};

export default CallableFunctionFormCode;
